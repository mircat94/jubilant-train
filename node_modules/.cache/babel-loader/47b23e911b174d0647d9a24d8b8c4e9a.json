{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/table/DataTableHeader.jsx\";\nimport React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst raiseSort = (path, sortColumn, handleSort) => {\n  if (sortColumn.path === path) sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";else {\n    sortColumn.path = path;\n    sortColumn.order = \"asc\";\n  }\n  console.log(\"handing\" + sortColumn);\n  handleSort(sortColumn);\n};\n\nconst DataTableHeaderCell = ({\n  columns,\n  sortColumn,\n  handleSort\n}) => {\n  console.log({\n    sortColumn\n  });\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: column.type === \"numeric\" ? \"right\" : \"left\",\n        id: column.field,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: sortColumn.path === column.field,\n          direction: sortColumn.order,\n          onClick: () => raiseSort(column.field, sortColumn, handleSort),\n          children: column.title\n        }, \"sort\" + column.field, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DataTableHeaderCell;\nexport default DataTableHeaderCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableHeaderCell\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/table/DataTableHeader.jsx"],"names":["React","TableCell","TableHead","TableRow","TableSortLabel","raiseSort","path","sortColumn","handleSort","order","console","log","DataTableHeaderCell","columns","map","column","type","field","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AACA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,UAAnB,KAAkC;AAClD,MAAID,UAAU,CAACD,IAAX,KAAoBA,IAAxB,EACEC,UAAU,CAACE,KAAX,GAAmBF,UAAU,CAACE,KAAX,KAAqB,KAArB,GAA6B,MAA7B,GAAsC,KAAzD,CADF,KAEK;AACHF,IAAAA,UAAU,CAACD,IAAX,GAAkBA,IAAlB;AACAC,IAAAA,UAAU,CAACE,KAAX,GAAmB,KAAnB;AACD;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,UAAxB;AACAC,EAAAA,UAAU,CAACD,UAAD,CAAV;AACD,CATD;;AAWA,MAAMK,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWN,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AACnEE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAA,gBACGM,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX,QAAC,SAAD;AACE,QAAA,KAAK,EAAEA,MAAM,CAACC,IAAP,KAAgB,SAAhB,GAA4B,OAA5B,GAAsC,MAD/C;AAEE,QAAA,EAAE,EAAED,MAAM,CAACE,KAFb;AAAA,+BAIE,QAAC,cAAD;AAEE,UAAA,MAAM,EAAEV,UAAU,CAACD,IAAX,KAAoBS,MAAM,CAACE,KAFrC;AAGE,UAAA,SAAS,EAAEV,UAAU,CAACE,KAHxB;AAIE,UAAA,OAAO,EAAE,MAAMJ,SAAS,CAACU,MAAM,CAACE,KAAR,EAAeV,UAAf,EAA2BC,UAA3B,CAJ1B;AAAA,oBAMGO,MAAM,CAACG;AANV,WACO,SAASH,MAAM,CAACE,KADvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBD;;KAAML,mB;AAyBN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nconst raiseSort = (path, sortColumn, handleSort) => {\n  if (sortColumn.path === path)\n    sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n  else {\n    sortColumn.path = path;\n    sortColumn.order = \"asc\";\n  }\n  console.log(\"handing\" + sortColumn);\n  handleSort(sortColumn);\n};\n\nconst DataTableHeaderCell = ({ columns, sortColumn, handleSort }) => {\n  console.log({ sortColumn });\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((column) => (\n          <TableCell\n            align={column.type === \"numeric\" ? \"right\" : \"left\"}\n            id={column.field}\n          >\n            <TableSortLabel\n              key={\"sort\" + column.field}\n              active={sortColumn.path === column.field}\n              direction={sortColumn.order}\n              onClick={() => raiseSort(column.field, sortColumn, handleSort)}\n            >\n              {column.title}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default DataTableHeaderCell;\n"]},"metadata":{},"sourceType":"module"}