{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/dialog/SlideInDialog.jsx\";\nimport { Container } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nexport default function FullScreenDialog({\n  children,\n  title,\n  body,\n  isOpen,\n  handleClickOpen,\n  handleClose,\n  maxWidth\n}) {\n  console.log(isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c3 = FullScreenDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"FullScreenDialog\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/dialog/SlideInDialog.jsx"],"names":["Container","AppBar","Button","Dialog","IconButton","Slide","createStyles","makeStyles","Toolbar","Typography","CloseIcon","React","Transition","forwardRef","props","ref","FullScreenDialog","children","title","body","isOpen","handleClickOpen","handleClose","maxWidth","console","log"],"mappings":";AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,gBAAGD,KAAK,CAACE,UAAN,MAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA,GAA3B;AAAA,OAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFkB,CAAnB;MAAMF,U;AAIN,eAAe,SAASI,gBAAT,CAA0B;AACvCC,EAAAA,QADuC;AAEvCC,EAAAA,KAFuC;AAGvCC,EAAAA,IAHuC;AAIvCC,EAAAA,MAJuC;AAKvCC,EAAAA,eALuC;AAMvCC,EAAAA,WANuC;AAOvCC,EAAAA;AAPuC,CAA1B,EAQZ;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAEA,sBACE;AAAA,2BAEE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEA,MADR;AAEE,MAAA,OAAO,EAAEE,WAFX;AAGE,MAAA,mBAAmB,EAAEV,UAHvB;AAAA,gBAeGK;AAfH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;MAjCuBD,gB","sourcesContent":["import { Container } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  children,\n  title,\n  body,\n  isOpen,\n  handleClickOpen,\n  handleClose,\n  maxWidth,\n}) {\n  console.log(isOpen);\n\n  return (\n    <div>\n      {/* <div onClick={handleClickOpen}>{children}</div> */}\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        {/* <Toolbar>\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar> */}\n        {children}\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}