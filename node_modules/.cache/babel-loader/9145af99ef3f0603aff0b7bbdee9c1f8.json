{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/main-page-metrics/MetricRow.jsx\";\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Metric from \"./Metric\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MetricRow = ({\n  data,\n  dateFilter\n}) => {\n  console.log({\n    dateFilter: dateFilter.value\n  });\n  let filteredDate = data.filter(d => {\n    // console.log(new Date(d.purchase_date));\n    if (dateFilter.label === \"All Orders\") {\n      return d;\n    } else if (new Date(d.purchase_date) > new Date(dateFilter.value)) {\n      return d;\n    } else {\n      return;\n    }\n  });\n  console.log({\n    filteredDate\n  });\n  const pending = filteredDate.filter(d => d.order_status === \"Pending\");\n  const completed = filteredDate.filter(d => d.order_status === \"Completed\");\n  const shipped = filteredDate.filter(d => d.order_status === \"Shipped\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      spacing: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Orders\",\n        metric: filteredDate.length,\n        subtitle: dateFilter.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      spacing: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Shipped\",\n        metric: shipped.length,\n        subtitle: dateFilter.label,\n        metricColor: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Completed\",\n        metric: completed.length,\n        subtitle: dateFilter.label,\n        metricColor: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Pending\",\n        metric: pending.length,\n        subtitle: dateFilter.label,\n        m: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MetricRow;\nexport default MetricRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetricRow\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/main-page-metrics/MetricRow.jsx"],"names":["Grid","React","Metric","MetricRow","data","dateFilter","console","log","value","filteredDate","filter","d","label","Date","purchase_date","pending","order_status","completed","shipped","borderRight","length"],"mappings":"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","sourcesContent":["import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Metric from \"./Metric\";\n\nconst MetricRow = ({ data, dateFilter }) => {\n  console.log({ dateFilter: dateFilter.value });\n  let filteredDate = data.filter((d) => {\n    // console.log(new Date(d.purchase_date));\n\n    if (dateFilter.label === \"All Orders\") {\n      return d;\n    } else if (new Date(d.purchase_date) > new Date(dateFilter.value)) {\n      return d;\n    } else {\n      return;\n    }\n  });\n  console.log({ filteredDate });\n  const pending = filteredDate.filter((d) => d.order_status === \"Pending\");\n  const completed = filteredDate.filter((d) => d.order_status === \"Completed\");\n  const shipped = filteredDate.filter((d) => d.order_status === \"Shipped\");\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item sm={3} spacing={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Orders\"}\n          metric={filteredDate.length}\n          subtitle={dateFilter.label}\n        />\n      </Grid>\n      <Grid item sm={3} spacing={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Shipped\"}\n          metric={shipped.length}\n          subtitle={dateFilter.label}\n          metricColor={\"secondary\"}\n        />\n      </Grid>\n      <Grid item sm={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Completed\"}\n          metric={completed.length}\n          subtitle={dateFilter.label}\n          metricColor={\"success\"}\n        />\n      </Grid>\n      <Grid item sm={3}>\n        <Metric\n          title={\"Pending\"}\n          metric={pending.length}\n          subtitle={dateFilter.label}\n          m\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MetricRow;\n"]},"metadata":{},"sourceType":"module"}