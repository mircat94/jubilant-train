{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { mockData, tableColumns } from \"../data/MockData\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableScene = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n  const [columns, setColumns] = useState(tableColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\"\n  });\n  const [searchQuery, setSearchQuery] = useState(null);\n\n  const handleSortColumn = sortCol => {\n    setSortColumn({\n      path: sortCol.path,\n      order: sortCol.order\n    });\n  };\n\n  useEffect(() => {\n    let filtered = [...data];\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    setData([...sorted]);\n  }, [data, searchQuery, sortColumn]);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    data: data,\n    columns: columns,\n    sortColumn: sortColumn,\n    handleSort: handleSortColumn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataTableScene, \"o8OAWIB+coUSt9vsnMsx55MsfxQ=\");\n\n_c = DataTableScene;\nexport default DataTableScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableScene\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx"],"names":["React","useState","useEffect","DataTable","mockData","tableColumns","_","DataTableScene","data","setData","columns","setColumns","sortColumn","setSortColumn","path","order","searchQuery","setSearchQuery","handleSortColumn","sortCol","filtered","sorted","orderBy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,kBAAvC;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACG,QAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACI,YAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AAC3Ca,IAAAA,IAAI,EAAE,YADqC;AAE3CC,IAAAA,KAAK,EAAE;AAFoC,GAAD,CAA5C;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMiB,gBAAgB,GAAIC,OAAD,IAAa;AACpCN,IAAAA,aAAa,CAAC;AAAEC,MAAAA,IAAI,EAAEK,OAAO,CAACL,IAAhB;AAAsBC,MAAAA,KAAK,EAAEI,OAAO,CAACJ;AAArC,KAAD,CAAb;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,QAAQ,GAAG,CAAC,GAAGZ,IAAJ,CAAf;;AACA,UAAMa,MAAM,GAAGf,CAAC,CAACgB,OAAF,CAAUF,QAAV,EAAoB,CAACR,UAAU,CAACE,IAAZ,CAApB,EAAuC,CAACF,UAAU,CAACG,KAAZ,CAAvC,CAAf;;AACAN,IAAAA,OAAO,CAAC,CAAC,GAAGY,MAAJ,CAAD,CAAP;AACD,GAJQ,EAIN,CAACb,IAAD,EAAOQ,WAAP,EAAoBJ,UAApB,CAJM,CAAT;AAKA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,UAAU,EAAEE,UAHd;AAIE,IAAA,UAAU,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzBD;;GAAMX,c;;KAAAA,c;AA2BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { mockData, tableColumns } from \"../data/MockData\";\nimport _ from \"lodash\";\n\nconst DataTableScene = () => {\n  const [data, setData] = useState(mockData);\n  const [columns, setColumns] = useState(tableColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\",\n  });\n  const [searchQuery, setSearchQuery] = useState(null);\n  const handleSortColumn = (sortCol) => {\n    setSortColumn({ path: sortCol.path, order: sortCol.order });\n  };\n\n  useEffect(() => {\n    let filtered = [...data];\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    setData([...sorted]);\n  }, [data, searchQuery, sortColumn]);\n  return (\n    <DataTable\n      data={data}\n      columns={columns}\n      sortColumn={sortColumn}\n      handleSort={handleSortColumn}\n    />\n  );\n};\n\nexport default DataTableScene;\n"]},"metadata":{},"sourceType":"module"}