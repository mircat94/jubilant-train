{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { defaultColumns, orderDetails } from \"../data/MockData\";\nimport Box from \"@material-ui/core/Box\";\nimport _ from \"lodash\";\nimport IconInput from \"../components/inputs/IconInput\";\nimport SlideInDialog from \"../components/dialog/SlideInDialog\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UserCard from \"../components/card/UserCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectInput from \"../components/inputs/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataTableScene = ({\n  mockData,\n  handleDateFilter,\n  dateFilter\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(defaultColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\"\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageSize, setPageSize] = useState(10);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n\n  const handleSortColumn = sortCol => {\n    setSortColumn({\n      path: sortCol.path,\n      order: sortCol.order\n    });\n    setCurrentPage(0);\n  };\n\n  const handleSearch = e => {\n    const value = e.target.value;\n\n    if (value === \"\") {\n      setData(mockData);\n    }\n\n    setCurrentPage(0);\n    setSearchQuery(value);\n  };\n\n  const handleChangePage = (e, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = e => {\n    setPageSize(e.target.value);\n    setCurrentPage(0);\n  };\n\n  const handleSelectedOrder = order => {\n    const shuffled = orderDetails.sort(() => 0.5 - Math.random());\n    let products = shuffled.slice(0, 4);\n    setSelectedOrder({\n      order,\n      products\n    });\n  };\n\n  useEffect(() => {\n    let filtered = [...mockData];\n    const search = new RegExp(searchQuery, \"igm\");\n\n    if (searchQuery !== \"\") {\n      filtered = filtered.filter(people => people.first_name.match(search) || people.last_name.match(search) || people.email.match(search) || people.city.match(search) || people.state.match(search));\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    setData([...sorted]);\n  }, [searchQuery, sortColumn, pageSize, currentPage]);\n  var today = new Date();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      margin: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.primary\",\n          style: {\n            padding: \"10px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n          label: \"Date Range\",\n          options: [{\n            label: \"All Orders\",\n            value: null\n          }, {\n            label: \"Last 7 days\",\n            value: new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7)\n          }, {\n            label: \"Last Month\",\n            value: new Date(today.getFullYear(), today.getMonth() - 1, today.getDate())\n          }, {\n            label: \"Last 6 Months\",\n            value: new Date(today.getFullYear(), today.getMonth() - 6, today.getDate())\n          }],\n          value: dateFilter,\n          handleClick: handleDateFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconInput, {\n          id: \"search-data-table\",\n          label: \"Search\",\n          value: searchQuery,\n          iconPosition: \"start\",\n          iconButtonLabel: \"search\",\n          icon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this),\n          handleChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: data,\n        columns: columns,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage,\n        sortColumn: sortColumn,\n        handleSort: handleSortColumn,\n        handleRowClick: handleSelectedOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideInDialog, {\n      isOpen: selectedOrder !== null,\n      children: /*#__PURE__*/_jsxDEV(UserCard, {\n        order: selectedOrder !== null && selectedOrder,\n        handleClose: () => setSelectedOrder(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataTableScene, \"T1PMVEeJXX0cVmntdz0axd8AcTc=\");\n\n_c = DataTableScene;\nexport default DataTableScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableScene\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx"],"names":["React","useState","useEffect","DataTable","defaultColumns","orderDetails","Box","_","IconInput","SlideInDialog","SearchIcon","UserCard","Typography","SelectInput","DataTableScene","mockData","handleDateFilter","dateFilter","data","setData","columns","setColumns","sortColumn","setSortColumn","path","order","searchQuery","setSearchQuery","pageSize","setPageSize","currentPage","setCurrentPage","selectedOrder","setSelectedOrder","handleSortColumn","sortCol","handleSearch","e","value","target","handleChangePage","newPage","handleChangeRowsPerPage","handleSelectedOrder","shuffled","sort","Math","random","products","slice","filtered","search","RegExp","filter","people","first_name","match","last_name","email","city","state","sorted","orderBy","today","Date","display","justifyContent","padding","fontWeight","label","getFullYear","getMonth","getDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,kBAA7C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,gBAAZ;AAA8BC,EAAAA;AAA9B,CAAD,KAAgD;AAAA;;AACrE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAACG,cAAD,CAAtC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC;AAC3CuB,IAAAA,IAAI,EAAE,YADqC;AAE3CC,IAAAA,KAAK,EAAE;AAFoC,GAAD,CAA5C;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC+B,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMiC,gBAAgB,GAAIC,OAAD,IAAa;AACpCZ,IAAAA,aAAa,CAAC;AAAEC,MAAAA,IAAI,EAAEW,OAAO,CAACX,IAAhB;AAAsBC,MAAAA,KAAK,EAAEU,OAAO,CAACV;AAArC,KAAD,CAAb;AACAM,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHD;;AAIA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AACA,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBnB,MAAAA,OAAO,CAACJ,QAAD,CAAP;AACD;;AACDgB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAJ,IAAAA,cAAc,CAACW,KAAD,CAAd;AACD,GAPD;;AAQA,QAAME,gBAAgB,GAAG,CAACH,CAAD,EAAII,OAAJ,KAAgB;AACvCV,IAAAA,cAAc,CAACU,OAAD,CAAd;AACD,GAFD;;AAGA,QAAMC,uBAAuB,GAAIL,CAAD,IAAO;AACrCR,IAAAA,WAAW,CAACQ,CAAC,CAACE,MAAF,CAASD,KAAV,CAAX;AACAP,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHD;;AAIA,QAAMY,mBAAmB,GAAIlB,KAAD,IAAW;AACrC,UAAMmB,QAAQ,GAAGvC,YAAY,CAACwC,IAAb,CAAkB,MAAM,MAAMC,IAAI,CAACC,MAAL,EAA9B,CAAjB;AACA,QAAIC,QAAQ,GAAGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAf;AACAhB,IAAAA,gBAAgB,CAAC;AAAER,MAAAA,KAAF;AAASuB,MAAAA;AAAT,KAAD,CAAhB;AACD,GAJD;;AAMA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgD,QAAQ,GAAG,CAAC,GAAGnC,QAAJ,CAAf;AACA,UAAMoC,MAAM,GAAG,IAAIC,MAAJ,CAAW1B,WAAX,EAAwB,KAAxB,CAAf;;AACA,QAAIA,WAAW,KAAK,EAApB,EAAwB;AACtBwB,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CACRC,MAAD,IACEA,MAAM,CAACC,UAAP,CAAkBC,KAAlB,CAAwBL,MAAxB,KACAG,MAAM,CAACG,SAAP,CAAiBD,KAAjB,CAAuBL,MAAvB,CADA,IAEAG,MAAM,CAACI,KAAP,CAAaF,KAAb,CAAmBL,MAAnB,CAFA,IAGAG,MAAM,CAACK,IAAP,CAAYH,KAAZ,CAAkBL,MAAlB,CAHA,IAIAG,MAAM,CAACM,KAAP,CAAaJ,KAAb,CAAmBL,MAAnB,CANO,CAAX;AAQD;;AACD,UAAMU,MAAM,GAAGtD,CAAC,CAACuD,OAAF,CAAUZ,QAAV,EAAoB,CAAC5B,UAAU,CAACE,IAAZ,CAApB,EAAuC,CAACF,UAAU,CAACG,KAAZ,CAAvC,CAAf;;AAEAN,IAAAA,OAAO,CAAC,CAAC,GAAG0C,MAAJ,CAAD,CAAP;AACD,GAhBQ,EAgBN,CAACnC,WAAD,EAAcJ,UAAd,EAA0BM,QAA1B,EAAoCE,WAApC,CAhBM,CAAT;AAiBA,MAAIiC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAC,MAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,IADV;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,UAAU,EAAE;AAA/B,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,WAAD;AACE,UAAA,KAAK,EAAE,YADT;AAEE,UAAA,OAAO,EAAE,CACP;AAAEC,YAAAA,KAAK,EAAE,YAAT;AAAuB/B,YAAAA,KAAK,EAAE;AAA9B,WADO,EAEP;AACE+B,YAAAA,KAAK,EAAE,aADT;AAEE/B,YAAAA,KAAK,EAAE,IAAI0B,IAAJ,CACLD,KAAK,CAACO,WAAN,EADK,EAELP,KAAK,CAACQ,QAAN,EAFK,EAGLR,KAAK,CAACS,OAAN,KAAkB,CAHb;AAFT,WAFO,EAUP;AACEH,YAAAA,KAAK,EAAE,YADT;AAEE/B,YAAAA,KAAK,EAAE,IAAI0B,IAAJ,CACLD,KAAK,CAACO,WAAN,EADK,EAELP,KAAK,CAACQ,QAAN,KAAmB,CAFd,EAGLR,KAAK,CAACS,OAAN,EAHK;AAFT,WAVO,EAkBP;AACEH,YAAAA,KAAK,EAAE,eADT;AAEE/B,YAAAA,KAAK,EAAE,IAAI0B,IAAJ,CACLD,KAAK,CAACO,WAAN,EADK,EAELP,KAAK,CAACQ,QAAN,KAAmB,CAFd,EAGLR,KAAK,CAACS,OAAN,EAHK;AAFT,WAlBO,CAFX;AA6BE,UAAA,KAAK,EAAEvD,UA7BT;AA8BE,UAAA,WAAW,EAAED;AA9Bf;AAAA;AAAA;AAAA;AAAA,gBARF,eAwCE,QAAC,SAAD;AACE,UAAA,EAAE,EAAE,mBADN;AAEE,UAAA,KAAK,EAAE,QAFT;AAGE,UAAA,KAAK,EAAEU,WAHT;AAIE,UAAA,YAAY,EAAE,OAJhB;AAKE,UAAA,eAAe,EAAE,QALnB;AAME,UAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBANR;AAOE,UAAA,YAAY,EAAEU;AAPhB;AAAA;AAAA;AAAA;AAAA,gBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoDE,QAAC,SAAD;AACE,QAAA,IAAI,EAAElB,IADR;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,QAAQ,EAAEQ,QAHZ;AAIE,QAAA,WAAW,EAAEE,WAJf;AAKE,QAAA,gBAAgB,EAAEU,gBALpB;AAME,QAAA,uBAAuB,EAAEE,uBAN3B;AAOE,QAAA,UAAU,EAAEpB,UAPd;AAQE,QAAA,UAAU,EAAEY,gBARd;AASE,QAAA,cAAc,EAAES;AATlB;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiEE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEX,aAAa,KAAK,IAAzC;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEA,aAAa,KAAK,IAAlB,IAA0BA,aADnC;AAEE,QAAA,WAAW,EAAE,MAAMC,gBAAgB,CAAC,IAAD;AAFrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjEF;AAAA,kBADF;AA0ED,CAjID;;GAAMnB,c;;KAAAA,c;AAmIN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { defaultColumns, orderDetails } from \"../data/MockData\";\nimport Box from \"@material-ui/core/Box\";\nimport _ from \"lodash\";\nimport IconInput from \"../components/inputs/IconInput\";\nimport SlideInDialog from \"../components/dialog/SlideInDialog\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport UserCard from \"../components/card/UserCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectInput from \"../components/inputs/Select\";\n\nconst DataTableScene = ({ mockData, handleDateFilter, dateFilter }) => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(defaultColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\",\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageSize, setPageSize] = useState(10);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n\n  const handleSortColumn = (sortCol) => {\n    setSortColumn({ path: sortCol.path, order: sortCol.order });\n    setCurrentPage(0);\n  };\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    if (value === \"\") {\n      setData(mockData);\n    }\n    setCurrentPage(0);\n    setSearchQuery(value);\n  };\n  const handleChangePage = (e, newPage) => {\n    setCurrentPage(newPage);\n  };\n  const handleChangeRowsPerPage = (e) => {\n    setPageSize(e.target.value);\n    setCurrentPage(0);\n  };\n  const handleSelectedOrder = (order) => {\n    const shuffled = orderDetails.sort(() => 0.5 - Math.random());\n    let products = shuffled.slice(0, 4);\n    setSelectedOrder({ order, products });\n  };\n\n  useEffect(() => {\n    let filtered = [...mockData];\n    const search = new RegExp(searchQuery, \"igm\");\n    if (searchQuery !== \"\") {\n      filtered = filtered.filter(\n        (people) =>\n          people.first_name.match(search) ||\n          people.last_name.match(search) ||\n          people.email.match(search) ||\n          people.city.match(search) ||\n          people.state.match(search)\n      );\n    }\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    setData([...sorted]);\n  }, [searchQuery, sortColumn, pageSize, currentPage]);\n  var today = new Date();\n  return (\n    <>\n      <Box margin=\"16px\">\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography\n            variant=\"h6\"\n            color=\"text.primary\"\n            style={{ padding: \"10px\", fontWeight: \"bold\" }}\n          >\n            Orders\n          </Typography>\n          <SelectInput\n            label={\"Date Range\"}\n            options={[\n              { label: \"All Orders\", value: null },\n              {\n                label: \"Last 7 days\",\n                value: new Date(\n                  today.getFullYear(),\n                  today.getMonth(),\n                  today.getDate() - 7\n                ),\n              },\n              {\n                label: \"Last Month\",\n                value: new Date(\n                  today.getFullYear(),\n                  today.getMonth() - 1,\n                  today.getDate()\n                ),\n              },\n              {\n                label: \"Last 6 Months\",\n                value: new Date(\n                  today.getFullYear(),\n                  today.getMonth() - 6,\n                  today.getDate()\n                ),\n              },\n            ]}\n            value={dateFilter}\n            handleClick={handleDateFilter}\n          />\n          <IconInput\n            id={\"search-data-table\"}\n            label={\"Search\"}\n            value={searchQuery}\n            iconPosition={\"start\"}\n            iconButtonLabel={\"search\"}\n            icon={<SearchIcon />}\n            handleChange={handleSearch}\n          />\n        </div>\n\n        <DataTable\n          data={data}\n          columns={columns}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          handleChangePage={handleChangePage}\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\n          sortColumn={sortColumn}\n          handleSort={handleSortColumn}\n          handleRowClick={handleSelectedOrder}\n        />\n      </Box>\n      <SlideInDialog isOpen={selectedOrder !== null}>\n        <UserCard\n          order={selectedOrder !== null && selectedOrder}\n          handleClose={() => setSelectedOrder(null)}\n        />\n      </SlideInDialog>\n    </>\n  );\n};\n\nexport default DataTableScene;\n"]},"metadata":{},"sourceType":"module"}