{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx\";\nimport { Avatar, CardContent, Divider, Grid, Typography, IconButton } from \"@material-ui/core\";\nimport { Card, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = ({\n  product,\n  id\n}) => {\n  console.log(product);\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            padding: \"16px\"\n          },\n          children: product.product_image !== null && /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: product.product_name,\n            src: product.product_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            style: {\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n              paddingLeft: \"16px\"\n            },\n            children: product.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\"$\", product.product_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Item;\n\nconst UserCard = ({\n  order,\n  handleClose\n}) => {\n  const {\n    order: user,\n    products\n  } = order;\n  console.log({\n    products\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      maxWidth: \"1000px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader // avatar={\n    //   <Avatar\n    //     alt={`${user.first_name} ${user.last_name}`}\n    //     src={user.avatar}\n    //   />\n    // }\n    , {\n      title: `${user.first_name} ${user.last_name}`,\n      subheader: `${user.purchase_date}`,\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"settings\",\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      style: {\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        product: {\n          product_image: null,\n          product_name: \"Product Name\",\n          quantity: \"Quantity\",\n          product_price: \"Price\"\n        }\n      }, products.length + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), products && products.map((product, index) => /*#__PURE__*/_jsxDEV(Item, {\n        product: product\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = UserCard;\nexport default UserCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"UserCard\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx"],"names":["Avatar","CardContent","Divider","Grid","Typography","IconButton","Card","CardHeader","React","CloseIcon","Item","product","id","console","log","padding","product_image","product_name","textAlign","fontWeight","paddingLeft","quantity","product_price","UserCard","order","handleClose","user","products","maxWidth","first_name","last_name","purchase_date","length","map","index"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Card, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst Item = ({ product, id }) => {\n  console.log(product);\n  if (!product) {\n    return <></>;\n  } else {\n    return (\n      <React.Fragment key={id}>\n        <Grid container spacing={2}>\n          <Grid item xs={1} style={{ padding: \"16px\" }}>\n            {product.product_image !== null && (\n              <Avatar alt={product.product_name} src={product.product_image} />\n            )}\n          </Grid>\n          <Grid item xs={8} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.primary\"\n              style={{\n                textAlign: \"left\",\n                fontWeight: \"bold\",\n                paddingLeft: \"16px\",\n              }}\n            >\n              {product.product_name}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.secondary\"\n              style={{ textAlign: \"left\" }}\n            >\n              {product.quantity}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.secondary\"\n              style={{ textAlign: \"left\" }}\n            >\n              ${product.product_price}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n      </React.Fragment>\n    );\n  }\n};\nconst UserCard = ({ order, handleClose }) => {\n  const { order: user, products } = order;\n  console.log({ products });\n  return (\n    <Card style={{ maxWidth: \"1000px\" }}>\n      <CardHeader\n        // avatar={\n        //   <Avatar\n        //     alt={`${user.first_name} ${user.last_name}`}\n        //     src={user.avatar}\n        //   />\n        // }\n        title={`${user.first_name} ${user.last_name}`}\n        subheader={`${user.purchase_date}`}\n        action={\n          <IconButton aria-label=\"settings\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n      {/* <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image=\"/static/images/cards/paella.jpg\"\n        alt=\"Paella dish\"\n      /> */}\n\n      <CardContent style={{ padding: \"0px\" }}>\n        <Item\n          product={{\n            product_image: null,\n            product_name: \"Product Name\",\n            quantity: \"Quantity\",\n            product_price: \"Price\",\n          }}\n          key={products.length + 1}\n        />\n        {products &&\n          products.map((product, index) => (\n            <Item product={product} key={index} />\n          ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}