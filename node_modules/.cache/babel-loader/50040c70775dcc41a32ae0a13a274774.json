{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/table/TableHeader.jsx\";\nimport React, { useState } from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableHeaderCell = ({\n  columns,\n  sortColumn,\n  handleSort\n}) => {\n  const raiseSort = (path, sortColumn, handleSort) => {\n    if (sortColumn.path === path) sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    handleSort(sortColumn);\n  };\n\n  const alignment = column.type === \"numeric\" ? \"right\" : \"left\";\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: alignment,\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: sortColumn.path === column.field,\n          direction: sortColumn.order,\n          onClick: () => raiseSort(column.field, sortColumn, handleSort),\n          children: column.label\n        }, column.id + \"sort\" + column.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableHeaderCell;\nexport default TableHeaderCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHeaderCell\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/table/TableHeader.jsx"],"names":["React","useState","TableCell","TableHead","TableRow","TableSortLabel","TableHeaderCell","columns","sortColumn","handleSort","raiseSort","path","order","alignment","column","type","map","className","field","label","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAC/D,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAOH,UAAP,EAAmBC,UAAnB,KAAkC;AAClD,QAAID,UAAU,CAACG,IAAX,KAAoBA,IAAxB,EACEH,UAAU,CAACI,KAAX,GAAmBJ,UAAU,CAACI,KAAX,KAAqB,KAArB,GAA6B,MAA7B,GAAsC,KAAzD,CADF,KAEK;AACHJ,MAAAA,UAAU,CAACG,IAAX,GAAkBA,IAAlB;AACAH,MAAAA,UAAU,CAACI,KAAX,GAAmB,KAAnB;AACD;AACDH,IAAAA,UAAU,CAACD,UAAD,CAAV;AACD,GARD;;AAUA,QAAMK,SAAS,GAAGC,MAAM,CAACC,IAAP,KAAgB,SAAhB,GAA4B,OAA5B,GAAsC,MAAxD;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAA,gBACGR,OAAO,CAACS,GAAR,CAAaF,MAAD,iBACX,QAAC,SAAD;AAAW,QAAA,KAAK,EAAED,SAAlB;AAA6B,QAAA,SAAS,EAAEI,SAAxC;AAAA,+BACE,QAAC,cAAD;AAEE,UAAA,MAAM,EAAET,UAAU,CAACG,IAAX,KAAoBG,MAAM,CAACI,KAFrC;AAGE,UAAA,SAAS,EAAEV,UAAU,CAACI,KAHxB;AAIE,UAAA,OAAO,EAAE,MAAMF,SAAS,CAACI,MAAM,CAACI,KAAR,EAAeV,UAAf,EAA2BC,UAA3B,CAJ1B;AAAA,oBAMGK,MAAM,CAACK;AANV,WACOL,MAAM,CAACM,EAAP,GAAY,MAAZ,GAAqBN,MAAM,CAACH,IADnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BD;;KAAML,e;AAgCN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nconst TableHeaderCell = ({ columns, sortColumn, handleSort }) => {\n  const raiseSort = (path, sortColumn, handleSort) => {\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    handleSort(sortColumn);\n  };\n\n  const alignment = column.type === \"numeric\" ? \"right\" : \"left\";\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((column) => (\n          <TableCell align={alignment} className={className}>\n            <TableSortLabel\n              key={column.id + \"sort\" + column.path}\n              active={sortColumn.path === column.field}\n              direction={sortColumn.order}\n              onClick={() => raiseSort(column.field, sortColumn, handleSort)}\n            >\n              {column.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default TableHeaderCell;\n"]},"metadata":{},"sourceType":"module"}