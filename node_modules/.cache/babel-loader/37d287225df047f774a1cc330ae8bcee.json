{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { defaultColumns, orderDetails } from \"../data/MockData\";\nimport Box from \"@material-ui/core/Box\";\nimport _ from \"lodash\";\nimport IconInput from \"../components/inputs/IconInput\";\nimport SlideInDialog from \"../components/dialog/SlideInDialog\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UserCard from \"../components/card/UserCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectInput from \"../components/inputs/Select\";\nimport MetricRow from \"../components/main-page-metrics/MetricRow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataTableScene = ({\n  mockData\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(defaultColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\"\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageSize, setPageSize] = useState(10);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [dateFilter, setDateFilter] = useState({\n    label: \"All Orders\",\n    value: \"\"\n  });\n\n  const handleDateFilter = newFilter => {\n    setDateFilter(newFilter);\n    setSearchQuery(\"\");\n  };\n\n  const handleSortColumn = sortCol => {\n    setSortColumn({\n      path: sortCol.path,\n      order: sortCol.order\n    });\n    setCurrentPage(0);\n  };\n\n  const handleSearch = e => {\n    const value = e.target.value;\n\n    if (value === \"\") {\n      setData(mockData);\n    } else {\n      setDateFilter({\n        label: \"All Orders\",\n        value: \"\"\n      });\n    }\n\n    setCurrentPage(0);\n    setSearchQuery(value);\n  };\n\n  const handleChangePage = (e, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = e => {\n    setPageSize(e.target.value);\n    setCurrentPage(0);\n  };\n\n  const handleSelectedOrder = order => {\n    const shuffled = orderDetails.sort(() => 0.5 - Math.random());\n    let products = shuffled.slice(0, 4);\n    setSelectedOrder({\n      order,\n      products\n    });\n  };\n\n  useEffect(() => {\n    let filtered = [...data];\n    const search = new RegExp(searchQuery, \"igm\");\n\n    if (searchQuery !== \"\") {\n      filtered = filtered.filter(people => people.first_name.match(search) || people.last_name.match(search) || people.email.match(search) || people.city.match(search) || people.state.match(search));\n    }\n\n    if (dateFilter.value !== \"\") {\n      console.log({\n        dateFilter\n      });\n      filtered = filtered.filter(d => new Date(d.purchase_date) > new Date(dateFilter.value));\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    setData([...sorted]);\n  }, [// data,\n  mockData, searchQuery, sortColumn, pageSize, currentPage, dateFilter // setData,\n  ]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      padding: \"32px 16px\",\n      children: /*#__PURE__*/_jsxDEV(MetricRow, {\n        data: data,\n        dateFilter: dateFilter,\n        filteredDate: mockData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        marginBottom: \"32px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      margin: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"text.primary\",\n            style: {\n              padding: \"10px\",\n              fontWeight: \"bold\",\n              marginRight: \"32px\"\n            },\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n            label: \"Date Range\",\n            options: [{\n              label: \"All Orders\",\n              value: \"\"\n            }, {\n              label: \"Last 7 days\",\n              value: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 7)\n            }, {\n              label: \"Last Month\",\n              value: new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate())\n            }, {\n              label: \"Last 6 Months\",\n              value: new Date(new Date().getFullYear(), new Date().getMonth() - 6, new Date().getDate())\n            }],\n            value: dateFilter,\n            handleClick: handleDateFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconInput, {\n          id: \"search-data-table\",\n          label: \"Search\",\n          value: searchQuery,\n          iconPosition: \"start\",\n          iconButtonLabel: \"search\",\n          icon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this),\n          handleChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: data,\n        columns: columns,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage,\n        sortColumn: sortColumn,\n        handleSort: handleSortColumn,\n        handleRowClick: handleSelectedOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedOrder !== null && /*#__PURE__*/_jsxDEV(SlideInDialog, {\n      isOpen: selectedOrder !== null,\n      children: /*#__PURE__*/_jsxDEV(UserCard, {\n        order: selectedOrder !== null && selectedOrder,\n        handleClose: () => setSelectedOrder(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataTableScene, \"ZlgpFvDkf83dkrspv7GEVpcy95Y=\");\n\n_c = DataTableScene;\nexport default DataTableScene;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableScene\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/scene/DataTableScene.jsx"],"names":["React","useState","useEffect","DataTable","defaultColumns","orderDetails","Box","_","IconInput","SlideInDialog","SearchIcon","UserCard","Typography","SelectInput","MetricRow","Divider","Avatar","DataTableScene","mockData","data","setData","columns","setColumns","sortColumn","setSortColumn","path","order","searchQuery","setSearchQuery","pageSize","setPageSize","currentPage","setCurrentPage","selectedOrder","setSelectedOrder","dateFilter","setDateFilter","label","value","handleDateFilter","newFilter","handleSortColumn","sortCol","handleSearch","e","target","handleChangePage","newPage","handleChangeRowsPerPage","handleSelectedOrder","shuffled","sort","Math","random","products","slice","filtered","search","RegExp","filter","people","first_name","match","last_name","email","city","state","console","log","d","Date","purchase_date","sorted","orderBy","marginBottom","display","justifyContent","padding","fontWeight","marginRight","getFullYear","getMonth","getDate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DataTable from \"../components/table/DataTable\";\nimport { defaultColumns, orderDetails } from \"../data/MockData\";\nimport Box from \"@material-ui/core/Box\";\nimport _ from \"lodash\";\nimport IconInput from \"../components/inputs/IconInput\";\nimport SlideInDialog from \"../components/dialog/SlideInDialog\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport UserCard from \"../components/card/UserCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SelectInput from \"../components/inputs/Select\";\nimport MetricRow from \"../components/main-page-metrics/MetricRow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst DataTableScene = ({ mockData }) => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(defaultColumns);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"first_name\",\n    order: \"asc\",\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [pageSize, setPageSize] = useState(10);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n\n  const [dateFilter, setDateFilter] = useState({\n    label: \"All Orders\",\n    value: \"\",\n  });\n  const handleDateFilter = (newFilter) => {\n    setDateFilter(newFilter);\n    setSearchQuery(\"\");\n  };\n  const handleSortColumn = (sortCol) => {\n    setSortColumn({ path: sortCol.path, order: sortCol.order });\n    setCurrentPage(0);\n  };\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    if (value === \"\") {\n      setData(mockData);\n    } else {\n      setDateFilter({\n        label: \"All Orders\",\n        value: \"\",\n      });\n    }\n    setCurrentPage(0);\n    setSearchQuery(value);\n  };\n  const handleChangePage = (e, newPage) => {\n    setCurrentPage(newPage);\n  };\n  const handleChangeRowsPerPage = (e) => {\n    setPageSize(e.target.value);\n    setCurrentPage(0);\n  };\n  const handleSelectedOrder = (order) => {\n    const shuffled = orderDetails.sort(() => 0.5 - Math.random());\n    let products = shuffled.slice(0, 4);\n    setSelectedOrder({ order, products });\n  };\n\n  useEffect(() => {\n    let filtered = [...data];\n    const search = new RegExp(searchQuery, \"igm\");\n    if (searchQuery !== \"\") {\n      filtered = filtered.filter(\n        (people) =>\n          people.first_name.match(search) ||\n          people.last_name.match(search) ||\n          people.email.match(search) ||\n          people.city.match(search) ||\n          people.state.match(search)\n      );\n    }\n\n    if (dateFilter.value !== \"\") {\n      console.log({ dateFilter });\n      filtered = filtered.filter(\n        (d) => new Date(d.purchase_date) > new Date(dateFilter.value)\n      );\n    }\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    setData([...sorted]);\n  }, [\n    // data,\n    mockData,\n    searchQuery,\n    sortColumn,\n    pageSize,\n    currentPage,\n    dateFilter,\n    // setData,\n  ]);\n\n  return (\n    <>\n      <Divider />\n      <Box padding=\"32px 16px\">\n        <MetricRow\n          data={data}\n          dateFilter={dateFilter}\n          filteredDate={mockData}\n        />\n      </Box>\n      <Divider style={{ marginBottom: \"32px\" }} />\n      <Box margin=\"16px\">\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div style={{ display: \"flex\" }}>\n            <Typography\n              variant=\"h4\"\n              color=\"text.primary\"\n              style={{\n                padding: \"10px\",\n                fontWeight: \"bold\",\n                marginRight: \"32px\",\n              }}\n            >\n              Orders\n            </Typography>\n            <SelectInput\n              label={\"Date Range\"}\n              options={[\n                { label: \"All Orders\", value: \"\" },\n                {\n                  label: \"Last 7 days\",\n                  value: new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 7\n                  ),\n                },\n                {\n                  label: \"Last Month\",\n                  value: new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth() - 1,\n                    new Date().getDate()\n                  ),\n                },\n                {\n                  label: \"Last 6 Months\",\n                  value: new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth() - 6,\n                    new Date().getDate()\n                  ),\n                },\n              ]}\n              value={dateFilter}\n              handleClick={handleDateFilter}\n            />\n          </div>\n          <IconInput\n            id={\"search-data-table\"}\n            label={\"Search\"}\n            value={searchQuery}\n            iconPosition={\"start\"}\n            iconButtonLabel={\"search\"}\n            icon={<SearchIcon />}\n            handleChange={handleSearch}\n          />\n        </div>\n\n        <DataTable\n          data={data}\n          columns={columns}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          handleChangePage={handleChangePage}\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\n          sortColumn={sortColumn}\n          handleSort={handleSortColumn}\n          handleRowClick={handleSelectedOrder}\n        />\n      </Box>\n      {selectedOrder !== null && (\n        <SlideInDialog isOpen={selectedOrder !== null}>\n          <UserCard\n            order={selectedOrder !== null && selectedOrder}\n            handleClose={() => setSelectedOrder(null)}\n          />\n        </SlideInDialog>\n      )}\n    </>\n  );\n};\n\nexport default DataTableScene;\n"]},"metadata":{},"sourceType":"module"}