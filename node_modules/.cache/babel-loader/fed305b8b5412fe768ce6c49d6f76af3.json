{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/table/DataTableBody.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableBody = ({\n  columns,\n  data\n}) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.field);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: column.type === \"numeric\" ? \"right\" : \"left\",\n        children: renderCell(item, column)\n      }, item.id + column.field, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DataTableBody;\nexport default DataTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableBody\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/table/DataTableBody.jsx"],"names":["React","_","TableCell","TableBody","TableRow","DataTableBody","columns","data","renderCell","item","column","content","get","field","map","type","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAC3C,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACnC,QAAIA,MAAM,CAACC,OAAX,EAAoB,OAAOD,MAAM,CAACC,OAAP,CAAeF,IAAf,CAAP;AAEpB,WAAOR,CAAC,CAACW,GAAF,CAAMH,IAAN,EAAYC,MAAM,CAACG,KAAnB,CAAP;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAA,cACGN,IAAI,CAACO,GAAL,CAAUL,IAAD,iBACR,QAAC,QAAD;AAAA,gBACGH,OAAO,CAACQ,GAAR,CAAaJ,MAAD,iBACX,QAAC,SAAD;AACE,QAAA,KAAK,EAAEA,MAAM,CAACK,IAAP,KAAgB,SAAhB,GAA4B,OAA5B,GAAsC,MAD/C;AAAA,kBAIGP,UAAU,CAACC,IAAD,EAAOC,MAAP;AAJb,SAEOD,IAAI,CAACO,EAAL,GAAUN,MAAM,CAACG,KAFxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvBD;;KAAMR,a;AAyBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst DataTableBody = ({ columns, data }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.field);\n  };\n\n  return (\n    <TableBody>\n      {data.map((item) => (\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.type === \"numeric\" ? \"right\" : \"left\"}\n              key={item.id + column.field}\n            >\n              {renderCell(item, column)}\n            </TableCell>\n          ))}\n        </TableRow>\n      ))}\n    </TableBody>\n  );\n};\n\nexport default DataTableBody;\n"]},"metadata":{},"sourceType":"module"}