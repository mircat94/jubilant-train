{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport cancelled from \"./cancelled.gif\";\nimport delivered from \"./delivered.gif\";\nimport shipped from \"./shipping.gif\";\nimport waiting from \"./waiting.gif\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderDetail = ({\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.primary\",\n      style: {\n        textAlign: \"left\",\n        fontWeight: \"bold\"\n      },\n      children: \"Ship to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.primary\",\n      style: {\n        textAlign: \"left\"\n      },\n      children: [user.first_name, \" \", user.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.primary\",\n      style: {\n        textAlign: \"left\"\n      },\n      children: [user.address, \" \", user.city, \", \", user.state, \", \", user.zip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OrderDetail;\n\nconst Products = ({\n  product,\n  id\n}) => {\n  console.log(product);\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          style: {\n            fontSize: \"12px\"\n          },\n          children: [\"x\", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: product.product_name,\n            src: product.product_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: product.product_name,\n          secondary: `$${product.product_price}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Products;\n\nconst UserCard = ({\n  order,\n  handleClose\n}) => {\n  const {\n    order: user,\n    products\n  } = order;\n\n  if (products && user) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        minWidth: \"500px\",\n        maxWidth: \"1000px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: `Order Details`,\n        subheader: `${user.order_status}`,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"350\",\n        image: user.order_status === \"Shipped\" ? shipped : user.order_status === \"Completed\" ? delivered : user.order_status === \"Cancelled\" ? cancelled : waiting,\n        alt: \"Paella dish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          padding: \"16px 16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(OrderDetail, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          padding: \"16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          children: [\" \", \"Order Placed on \", user.purchase_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: products && products.map((product, index) => /*#__PURE__*/_jsxDEV(Products, {\n            product: product\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c3 = UserCard;\nexport default UserCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OrderDetail\");\n$RefreshReg$(_c2, \"Products\");\n$RefreshReg$(_c3, \"UserCard\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx"],"names":["Avatar","CardContent","CardHeader","Card","CardMedia","Divider","Typography","IconButton","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","cancelled","delivered","shipped","waiting","React","CloseIcon","OrderDetail","user","textAlign","fontWeight","first_name","last_name","address","city","state","zip","Products","product","id","console","log","fontSize","quantity","product_name","product_image","product_price","UserCard","order","handleClose","products","minWidth","maxWidth","order_status","padding","purchase_date","map","index"],"mappings":"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","sourcesContent":["import Avatar from \"@material-ui/core/Avatar\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport cancelled from \"./cancelled.gif\";\nimport delivered from \"./delivered.gif\";\nimport shipped from \"./shipping.gif\";\nimport waiting from \"./waiting.gif\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst OrderDetail = ({ user }) => {\n  return (\n    <React.Fragment>\n      <Typography\n        variant={\"body2\"}\n        color=\"text.primary\"\n        style={{\n          textAlign: \"left\",\n          fontWeight: \"bold\",\n        }}\n      >\n        Ship to\n      </Typography>\n      <Typography\n        variant={\"body1\"}\n        color=\"text.primary\"\n        style={{\n          textAlign: \"left\",\n        }}\n      >\n        {user.first_name} {user.last_name}\n      </Typography>\n      <Typography\n        variant={\"body2\"}\n        color=\"text.primary\"\n        style={{\n          textAlign: \"left\",\n        }}\n      >\n        {user.address} {user.city}, {user.state}, {user.zip}\n      </Typography>\n    </React.Fragment>\n  );\n};\nconst Products = ({ product, id }) => {\n  console.log(product);\n  if (!product) {\n    return <></>;\n  } else {\n    return (\n      <React.Fragment key={id}>\n        <ListItem>\n          <ListItemSecondaryAction style={{ fontSize: \"12px\" }}>\n            x{product.quantity}\n          </ListItemSecondaryAction>\n          <ListItemAvatar>\n            <Avatar alt={product.product_name} src={product.product_image} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={product.product_name}\n            secondary={`$${product.product_price}`}\n          />\n        </ListItem>\n        <Divider />\n      </React.Fragment>\n    );\n  }\n};\nconst UserCard = ({ order, handleClose }) => {\n  const { order: user, products } = order;\n  if (products && user) {\n    return (\n      <Card style={{ minWidth: \"500px\", maxWidth: \"1000px\" }}>\n        <CardHeader\n          title={`Order Details`}\n          subheader={`${user.order_status}`}\n          action={\n            <IconButton aria-label=\"settings\" onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          }\n        />\n        <CardMedia\n          component=\"img\"\n          height=\"350\"\n          image={\n            user.order_status === \"Shipped\"\n              ? shipped\n              : user.order_status === \"Completed\"\n              ? delivered\n              : user.order_status === \"Cancelled\"\n              ? cancelled\n              : waiting\n          }\n          alt=\"Paella dish\"\n        />\n        <CardContent style={{ padding: \"16px 16px\" }}>\n          <OrderDetail user={user} />\n        </CardContent>\n\n        <CardContent style={{ padding: \"16px\" }}>\n          <Typography variant=\"overline\">\n            {\" \"}\n            Order Placed on {user.purchase_date}\n          </Typography>\n          <Divider />\n          <List>\n            {products &&\n              products.map((product, index) => (\n                <Products product={product} key={index} />\n              ))}\n          </List>\n        </CardContent>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}