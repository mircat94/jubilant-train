{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx\";\nimport { Avatar, CardContent, Divider, Grid, Typography, IconButton } from \"@material-ui/core\";\nimport { Card, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderDetail = ({\n  order\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        style: {\n          padding: \"16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: order.first_name,\n          src: order.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        style: {\n          padding: \"16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.primary\",\n          style: {\n            textAlign: \"left\",\n            paddingLeft: \"16px\"\n          },\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          padding: \"16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          style: {\n            textAlign: \"left\"\n          },\n          children: product.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        style: {\n          padding: \"16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          style: {\n            textAlign: \"left\"\n          },\n          children: [product.product_image !== null && \"$\", product.product_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OrderDetail;\n\nconst Products = ({\n  product,\n  id\n}) => {\n  console.log(product);\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            style: {\n              textAlign: \"left\",\n              paddingLeft: \"16px\"\n            },\n            children: product.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          style: {\n            padding: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: [product.product_image !== null && \"$\", product.product_price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Products;\n\nconst UserCard = ({\n  order,\n  handleClose\n}) => {\n  const {\n    order: user,\n    products\n  } = order;\n\n  if (products && user) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: \"1000px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: `Order # ${user.zip}`,\n        subheader: `${user.purchase_date}`,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"settings\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          padding: \"16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          product: {\n            product_image: null,\n            product_name: \"Product\",\n            quantity: \"Quantity\",\n            product_price: \"Price\"\n          }\n        }, products.length + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), products && products.map((product, index) => /*#__PURE__*/_jsxDEV(Item, {\n          product: product\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          padding: \"16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          product: {\n            product_image: null,\n            product_name: \"Product\",\n            quantity: \"Quantity\",\n            product_price: \"Price\"\n          }\n        }, products.length + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), products && products.map((product, index) => /*#__PURE__*/_jsxDEV(Products, {\n          product: product\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c3 = UserCard;\nexport default UserCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OrderDetail\");\n$RefreshReg$(_c2, \"Products\");\n$RefreshReg$(_c3, \"UserCard\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/card/UserCard.jsx"],"names":["Avatar","CardContent","Divider","Grid","Typography","IconButton","Card","CardHeader","React","CloseIcon","OrderDetail","order","padding","first_name","avatar","textAlign","paddingLeft","product","product_name","quantity","product_image","product_price","Products","id","console","log","UserCard","handleClose","user","products","maxWidth","zip","purchase_date","length","map","index"],"mappings":";AAAA,SACEA,MADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,UANF,QAOO,mBAPP;AAQA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAED,KAAK,CAACE,UAAnB;AAA+B,UAAA,GAAG,EAAEF,KAAK,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,OADX;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAE;AACLG,YAAAA,SAAS,EAAE,MADN;AAGLC,YAAAA,WAAW,EAAE;AAHR,WAHT;AAAA,oBASGC,OAAO,CAACC;AATX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAiBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,OADX;AAEE,UAAA,KAAK,EAAC,gBAFR;AAGE,UAAA,KAAK,EAAE;AAAEG,YAAAA,SAAS,EAAE;AAAb,WAHT;AAAA,oBAKGE,OAAO,CAACE;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eA0BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEP,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,OADX;AAEE,UAAA,KAAK,EAAC,gBAFR;AAGE,UAAA,KAAK,EAAE;AAAEG,YAAAA,SAAS,EAAE;AAAb,WAHT;AAAA,qBAKGE,OAAO,CAACG,aAAR,KAA0B,IAA1B,IAAkC,GALrC,EAMGH,OAAO,CAACI,aANX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAsCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA3CD;;KAAMX,W;;AA4CN,MAAMY,QAAQ,GAAG,CAAC;AAAEL,EAAAA,OAAF;AAAWM,EAAAA;AAAX,CAAD,KAAqB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,wBAAO,qCAAP;AACD,GAFD,MAEO;AACL,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,KAAK,EAAE;AAAEL,YAAAA,OAAO,EAAE;AAAX,WAAzB;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,OADX;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,KAAK,EAAE;AACLG,cAAAA,SAAS,EAAE,MADN;AAGLC,cAAAA,WAAW,EAAE;AAHR,aAHT;AAAA,sBASGC,OAAO,CAACC;AATX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAmBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,KAAK,EAAE;AAAEN,YAAAA,OAAO,EAAE;AAAX,WAAzB;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,OADX;AAEE,YAAA,KAAK,EAAC,gBAFR;AAGE,YAAA,KAAK,EAAE;AAAEG,cAAAA,SAAS,EAAE;AAAb,aAHT;AAAA,sBAKGE,OAAO,CAACE;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA4BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,KAAK,EAAE;AAAEP,YAAAA,OAAO,EAAE;AAAX,WAAzB;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,OADX;AAEE,YAAA,KAAK,EAAC,gBAFR;AAGE,YAAA,KAAK,EAAE;AAAEG,cAAAA,SAAS,EAAE;AAAb,aAHT;AAAA,uBAKGE,OAAO,CAACG,aAAR,KAA0B,IAA1B,IAAkC,GALrC,EAMGH,OAAO,CAACI,aANX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA,OAAqBE,EAArB;AAAA;AAAA;AAAA;AAAA,YADF;AA4CD;AACF,CAlDD;;MAAMD,Q;;AAmDN,MAAMI,QAAQ,GAAG,CAAC;AAAEf,EAAAA,KAAF;AAASgB,EAAAA;AAAT,CAAD,KAA4B;AAC3C,QAAM;AAAEhB,IAAAA,KAAK,EAAEiB,IAAT;AAAeC,IAAAA;AAAf,MAA4BlB,KAAlC;;AACA,MAAIkB,QAAQ,IAAID,IAAhB,EAAsB;AACpB,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAG,WAAUF,IAAI,CAACG,GAAI,EAD7B;AAEE,QAAA,SAAS,EAAG,GAAEH,IAAI,CAACI,aAAc,EAFnC;AAGE,QAAA,MAAM,eACJ,QAAC,UAAD;AAAY,wBAAW,UAAvB;AAAkC,UAAA,OAAO,EAAEL,WAA3C;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEf,UAAAA,OAAO,EAAE;AAAX,SAApB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,OAAO,EAAE;AACPQ,YAAAA,aAAa,EAAE,IADR;AAEPF,YAAAA,YAAY,EAAE,SAFP;AAGPC,YAAAA,QAAQ,EAAE,UAHH;AAIPE,YAAAA,aAAa,EAAE;AAJR;AADX,WAOOQ,QAAQ,CAACI,MAAT,GAAkB,CAPzB;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGJ,QAAQ,IACPA,QAAQ,CAACK,GAAT,CAAa,CAACjB,OAAD,EAAUkB,KAAV,kBACX,QAAC,IAAD;AAAM,UAAA,OAAO,EAAElB;AAAf,WAA6BkB,KAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAgCE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX,SAApB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,OAAO,EAAE;AACPQ,YAAAA,aAAa,EAAE,IADR;AAEPF,YAAAA,YAAY,EAAE,SAFP;AAGPC,YAAAA,QAAQ,EAAE,UAHH;AAIPE,YAAAA,aAAa,EAAE;AAJR;AADX,WAOOQ,QAAQ,CAACI,MAAT,GAAkB,CAPzB;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGJ,QAAQ,IACPA,QAAQ,CAACK,GAAT,CAAa,CAACjB,OAAD,EAAUkB,KAAV,kBACX,QAAC,QAAD;AAAU,UAAA,OAAO,EAAElB;AAAnB,WAAiCkB,KAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD,GAnDD,MAmDO;AACL,WAAO,IAAP;AACD;AACF,CAxDD;;MAAMT,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import {\n  Avatar,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Card, CardHeader } from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst OrderDetail = ({ order }) => {\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={3} style={{ padding: \"16px\" }}>\n          <Avatar alt={order.first_name} src={order.avatar} />\n        </Grid>\n        <Grid item xs={8} style={{ padding: \"16px\" }}>\n          <Typography\n            variant={\"body2\"}\n            color=\"text.primary\"\n            style={{\n              textAlign: \"left\",\n\n              paddingLeft: \"16px\",\n            }}\n          >\n            {product.product_name}\n          </Typography>\n        </Grid>\n        <Grid item xs={2} style={{ padding: \"16px\" }}>\n          <Typography\n            variant={\"body2\"}\n            color=\"text.secondary\"\n            style={{ textAlign: \"left\" }}\n          >\n            {product.quantity}\n          </Typography>\n        </Grid>\n        <Grid item xs={1} style={{ padding: \"16px\" }}>\n          <Typography\n            variant={\"body2\"}\n            color=\"text.secondary\"\n            style={{ textAlign: \"left\" }}\n          >\n            {product.product_image !== null && \"$\"}\n            {product.product_price}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Divider />\n    </React.Fragment>\n  );\n};\nconst Products = ({ product, id }) => {\n  console.log(product);\n  if (!product) {\n    return <></>;\n  } else {\n    return (\n      <React.Fragment key={id}>\n        <Grid container spacing={2}>\n          {/* <Grid item xs={1} style={{ padding: \"16px\" }}>\n            {product.product_image !== null && (\n              <Avatar alt={product.product_name} src={product.product_image} />\n            )}\n          </Grid> */}\n          <Grid item xs={8} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.primary\"\n              style={{\n                textAlign: \"left\",\n\n                paddingLeft: \"16px\",\n              }}\n            >\n              {product.product_name}\n            </Typography>\n          </Grid>\n          <Grid item xs={2} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.secondary\"\n              style={{ textAlign: \"left\" }}\n            >\n              {product.quantity}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} style={{ padding: \"16px\" }}>\n            <Typography\n              variant={\"body2\"}\n              color=\"text.secondary\"\n              style={{ textAlign: \"left\" }}\n            >\n              {product.product_image !== null && \"$\"}\n              {product.product_price}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n      </React.Fragment>\n    );\n  }\n};\nconst UserCard = ({ order, handleClose }) => {\n  const { order: user, products } = order;\n  if (products && user) {\n    return (\n      <Card style={{ maxWidth: \"1000px\" }}>\n        <CardHeader\n          title={`Order # ${user.zip}`}\n          subheader={`${user.purchase_date}`}\n          action={\n            <IconButton aria-label=\"settings\" onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          }\n        />\n        <CardContent style={{ padding: \"16px\" }}>\n          <Item\n            product={{\n              product_image: null,\n              product_name: \"Product\",\n              quantity: \"Quantity\",\n              product_price: \"Price\",\n            }}\n            key={products.length + 1}\n          />\n          {products &&\n            products.map((product, index) => (\n              <Item product={product} key={index} />\n            ))}\n        </CardContent>\n        {/* <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image=\"/static/images/cards/paella.jpg\"\n        alt=\"Paella dish\"\n      /> */}\n\n        <CardContent style={{ padding: \"16px\" }}>\n          <Item\n            product={{\n              product_image: null,\n              product_name: \"Product\",\n              quantity: \"Quantity\",\n              product_price: \"Price\",\n            }}\n            key={products.length + 1}\n          />\n          {products &&\n            products.map((product, index) => (\n              <Products product={product} key={index} />\n            ))}\n        </CardContent>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}