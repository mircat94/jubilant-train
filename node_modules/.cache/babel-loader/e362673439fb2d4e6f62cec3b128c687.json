{"ast":null,"code":"var _jsxFileName = \"/Users/mirandaebraheim/Documents/Other/demos/src/components/main-page-metrics/MetricRow.jsx\";\nimport { Grid } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport Metric from \"./Metric\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MetricRow = ({\n  data,\n  dateFilter\n}) => {\n  console.log({\n    dateFilter\n  }); //   const filteredDate = data.filter((d) => {\n  //     if (dateFilter === \"All Orders\") {\n  //       return d;\n  //     } else if (dateFilter === \"Last 7 days\") {\n  //     } else if (dateFilter === \"Last Month\") {\n  //     } else if (dateFilter === \"Last 6 Months\") {\n  //     }\n  //     d.purchase_date;\n  //   });\n\n  const pending = data.filter(d => d.order_status === \"Pending\");\n  const cancelled = data.filter(d => d.order_status === \"Cancelled\");\n  const completed = data.filter(d => d.order_status === \"Completed\");\n  const shipped = data.filter(d => d.order_status === \"Shipped\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      spacing: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Orders\",\n        metric: data.length,\n        variance: \"+12%\",\n        varianceType: \"success\",\n        subtitle: dateFilter.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      spacing: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Shipped\",\n        metric: shipped.length,\n        variance: \"-10%\",\n        varianceType: \"error\",\n        subtitle: dateFilter.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      style: {\n        borderRight: \"1px solid #ccc\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Completed\",\n        metric: completed.length,\n        variance: \"+1%\",\n        varianceType: \"error\",\n        subtitle: dateFilter.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(Metric, {\n        title: \"Pending\",\n        metric: pending.length,\n        variance: \"+1%\",\n        varianceType: \"error\",\n        subtitle: dateFilter.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MetricRow;\nexport default MetricRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetricRow\");","map":{"version":3,"sources":["/Users/mirandaebraheim/Documents/Other/demos/src/components/main-page-metrics/MetricRow.jsx"],"names":["Grid","React","Component","Metric","MetricRow","data","dateFilter","console","log","pending","filter","d","order_status","cancelled","completed","shipped","borderRight","length","label"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ,EAD0C,CAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMG,OAAO,GAAGJ,IAAI,CAACK,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,YAAF,KAAmB,SAAtC,CAAhB;AACA,QAAMC,SAAS,GAAGR,IAAI,CAACK,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,YAAF,KAAmB,WAAtC,CAAlB;AACA,QAAME,SAAS,GAAGT,IAAI,CAACK,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,YAAF,KAAmB,WAAtC,CAAlB;AACA,QAAMG,OAAO,GAAGV,IAAI,CAACK,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,YAAF,KAAmB,SAAtC,CAAhB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAE;AAAEI,QAAAA,WAAW,EAAE;AAAf,OAArC;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,MAAM,EAAEX,IAAI,CAACY,MAFf;AAGE,QAAA,QAAQ,EAAE,MAHZ;AAIE,QAAA,YAAY,EAAE,SAJhB;AAKE,QAAA,QAAQ,EAAEX,UAAU,CAACY;AALvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,OAAO,EAAE,CAA3B;AAA8B,MAAA,KAAK,EAAE;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAArC;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,SADT;AAEE,QAAA,MAAM,EAAED,OAAO,CAACE,MAFlB;AAGE,QAAA,QAAQ,EAAE,MAHZ;AAIE,QAAA,YAAY,EAAE,OAJhB;AAKE,QAAA,QAAQ,EAAEX,UAAU,CAACY;AALvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAzB;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,WADT;AAEE,QAAA,MAAM,EAAEF,SAAS,CAACG,MAFpB;AAGE,QAAA,QAAQ,EAAE,KAHZ;AAIE,QAAA,YAAY,EAAE,OAJhB;AAKE,QAAA,QAAQ,EAAEX,UAAU,CAACY;AALvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,eA4BE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,SADT;AAEE,QAAA,MAAM,EAAET,OAAO,CAACQ,MAFlB;AAGE,QAAA,QAAQ,EAAE,KAHZ;AAIE,QAAA,YAAY,EAAE,OAJhB;AAKE,QAAA,QAAQ,EAAEX,UAAU,CAACY;AALvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAxDD;;KAAMd,S;AA0DN,eAAeA,SAAf","sourcesContent":["import { Grid } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport Metric from \"./Metric\";\n\nconst MetricRow = ({ data, dateFilter }) => {\n  console.log({ dateFilter });\n  //   const filteredDate = data.filter((d) => {\n  //     if (dateFilter === \"All Orders\") {\n  //       return d;\n  //     } else if (dateFilter === \"Last 7 days\") {\n  //     } else if (dateFilter === \"Last Month\") {\n  //     } else if (dateFilter === \"Last 6 Months\") {\n  //     }\n  //     d.purchase_date;\n  //   });\n  const pending = data.filter((d) => d.order_status === \"Pending\");\n  const cancelled = data.filter((d) => d.order_status === \"Cancelled\");\n  const completed = data.filter((d) => d.order_status === \"Completed\");\n  const shipped = data.filter((d) => d.order_status === \"Shipped\");\n\n  return (\n    <Grid container>\n      <Grid item sm={3} spacing={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Orders\"}\n          metric={data.length}\n          variance={\"+12%\"}\n          varianceType={\"success\"}\n          subtitle={dateFilter.label}\n        />\n      </Grid>\n      <Grid item sm={3} spacing={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Shipped\"}\n          metric={shipped.length}\n          variance={\"-10%\"}\n          varianceType={\"error\"}\n          subtitle={dateFilter.label}\n        />\n      </Grid>\n      <Grid item sm={3} style={{ borderRight: \"1px solid #ccc\" }}>\n        <Metric\n          title={\"Completed\"}\n          metric={completed.length}\n          variance={\"+1%\"}\n          varianceType={\"error\"}\n          subtitle={dateFilter.label}\n        />\n      </Grid>\n      <Grid item sm={3}>\n        <Metric\n          title={\"Pending\"}\n          metric={pending.length}\n          variance={\"+1%\"}\n          varianceType={\"error\"}\n          subtitle={dateFilter.label}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MetricRow;\n"]},"metadata":{},"sourceType":"module"}